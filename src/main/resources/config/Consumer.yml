

spring:
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      group-id: prod-group
      auto-offset-reset: earliest
    properties:
      # security.protocol: SSL
      # ssl.truststore.location: C:\\softwares\\kafka\\ssl2\\kafka.server.truststore.jks
      # ssl.truststore.password: 123456
      # ssl.keystore.location: C:\\softwares\\kafka\\ssl2\\kafka.server.keystore.jks
      # ssl.keystore.password: 123456
      # ssl.key.password: 123456
      spring:
        kafka:
          json:
            trusted-packages: io.materialplus.consumer
          listener:
            missing-topics-fatal: false
      spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      spring.kafka.consumer.properties.spring.deserializer.value.delegate: org.springframework.kafka.support.serializer.JsonDeserializer
      spring.kafka.consumer.properties.spring.deserializer.value.default-type: io.materialplus.consumer.TransactionDetails
server:
  port: 8082

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/


  kafka:
    consumer:
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: io.materialplus.producer.records.ProducerCreditCardTransactionRecord

management:
  tracing:
    sampling:
      probability: 1.0